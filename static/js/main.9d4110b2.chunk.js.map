{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","props","movie","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","key","imdbId","FindMovie","addMovie","useState","setTitle","setMovie","isLoading","setLoading","isMovieFound","setMovieStatus","findMovie","movieTitle","a","fetch","response","ok","Error","json","movieFromApi","Response","clearForm","createMovie","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","disabled","onClick","App","data","setMovies","newMovie","some","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d4110b2.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = (props) => {\n  const { title, description = '', imgUrl, imdbUrl } = props.movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nconst SearchUrl = 'https://www.omdbapi.com/?apikey=7272b996&t=';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [isMovieFound, setMovieStatus] = useState(true);\n\n  const onChangeTitle = (event) => {\n    const { value } = event.target;\n\n    setMovieStatus(true);\n    setTitle(value);\n  };\n\n  const findMovie = async(movieTitle) => {\n    setLoading(true);\n    const response = await fetch(`${SearchUrl}${movieTitle}`);\n\n    if (!response.ok) {\n      throw new Error('Error fetch');\n    }\n\n    const movieFromApi = await response.json();\n\n    if (movieFromApi.Response === 'False') {\n      setMovieStatus(false);\n      clearForm();\n      throw new Error('Can not find a film');\n    }\n\n    setMovie(createMovie(movieFromApi));\n    clearForm();\n  };\n\n  const createMovie = (movieFromApi) => {\n    const newMovie = {\n      title: movieFromApi.Title,\n      description: movieFromApi.Plot,\n      imgUrl: movieFromApi.Poster,\n      imdbUrl: movieFromApi.imdbID,\n      imdbId: movieFromApi.imdbID,\n    };\n\n    return newMovie;\n  };\n\n  const clearForm = () => {\n    setTitle('');\n    setLoading(false);\n  };\n\n  const onSubmit = () => {\n    addMovie(movie);\n    clearForm();\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': !isMovieFound })}\n              value={isLoading ? 'Loading...' : title}\n              onChange={onChangeTitle}\n              disabled={isLoading}\n            />\n          </div>\n\n          {!isMovieFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => findMovie(title)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={onSubmit}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: propTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (newMovie) => {\n    if (!movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      setMovies(prevMovies => [...prevMovies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}