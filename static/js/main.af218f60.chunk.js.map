{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","movieTitle","a","fetch","response","ok","status","statusText","Error","json","FindMovie","onAddMovie","useState","setMovieTitle","foundedMovie","setFoundedMovie","isError","setIsError","isLoading","setIsLoading","useEffect","searchMovie","result","htmlFor","type","id","placeholder","classnames","value","onChange","event","target","disabled","onClick","App","addMovie","useCallback","newMovie","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af218f60.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard key={movie.imdbID} movie={movie} />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=7272b996';\n\nexport const getMovie = async (movieTitle: string) => {\n  const response = await fetch(`${BASE_URL}&t=${movieTitle}`);\n\n  if (!response.ok) {\n    const { status, statusText } = response;\n\n    throw new Error(`${status} - ${statusText}`);\n  }\n\n  return response.json();\n};\n","import React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\ntype Props = {\n  onAddMovie: (arg0: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [movieTitle, setMovieTitle] = useState<string>('');\n  const [foundedMovie, setFoundedMovie] = useState<Movie | null>(null);\n  const [isError, setIsError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsError(false);\n  }, [movieTitle]);\n\n  const searchMovie = async () => {\n    setIsLoading(true);\n    setIsError(false);\n\n    const result = await getMovie(movieTitle);\n\n    if (result.Error) {\n      setIsError(true);\n    } else {\n      setFoundedMovie(result);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleAddMovie = () => {\n    if (foundedMovie) {\n      onAddMovie(foundedMovie);\n    }\n\n    setMovieTitle('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classnames('input',\n                { 'is-danger': isError })}\n              value={movieTitle}\n              onChange={event => setMovieTitle(event.target.value)}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n          {isLoading && (\n            <p className=\"help\">\n              Searching...\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              data-cy=\"find\"\n              disabled={isLoading}\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              data-cy=\"add\"\n              disabled={!foundedMovie}\n              onClick={handleAddMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {foundedMovie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={foundedMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, addMovie] = useState<Movie[]>([]);\n\n  const onAddMovie = useCallback((newMovie: Movie): void => {\n    const moviesIds = movies.map(\n      ({ imdbID }) => imdbID,\n    );\n\n    if (!moviesIds.includes(newMovie.imdbID)) {\n      addMovie([newMovie, ...movies]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={onAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}